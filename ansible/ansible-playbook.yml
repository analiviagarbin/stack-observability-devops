- name: Deploy Stack
  hosts: server
  remote_user: ana
  become: yes

  tasks:
    - name: requirements
      apt:
        name:
          - rsync
          - ca-certificates
          - curl
        update_cache: yes
        state: present
      

    - name: check if docker is installed
      command: docker -v 
      register: docker_installed
      ignore_errors: true


    - name: install docker
      block:
      - name: add docker GPG apt key
        ansible.builtin.shell:
          cmd: |
            sudo install -m 0755 -d /etc/apt/keyrings
            sudo curl -fsSL https://download.docker.com/linux/debian/gpg -o /etc/apt/keyrings/docker.asc
            sudo chmod a+r /etc/apt/keyrings/docker.asc

      - name: add docker repository
        block:
            - name: add repos
              ansible.builtin.shell:
                cmd: |
                  echo \
                  "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian \
                  "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
                  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

            - name: update apt
              apt:
                update_cache: yes


      - name: install docker packages
        ansible.builtin.apt:
          name:
            - docker-ce 
            - docker-ce-cli 
            - containerd.io 
            - docker-buildx-plugin 
            - docker-compose-plugin
          state: latest
          update_cache: yes
      when: docker_installed.failed


    - name: create /deploy path
      file:
        path: "deploy"
        state: directory


    - name: create /prometheus path
      file: 
        path: "deploy/prometheus"
        state: directory


    - name: create /grafana path
      file: 
        path: "deploy/grafana"
        state: directory


    - name: copy docker-compose.yml
      copy:
        src: "../deploy/docker-compose.yml"
        dest: "deploy/docker-compose.yml"
      register: config_copy

    
    - name: copy prometheus.yml config
      copy:
        src: "../prometheus/prometheus.yml"
        dest: "deploy/prometheus/prometheus.yml"
      register: config_prometheus_copy


    - name: copy grafana data path
      synchronize:
        src: "../grafana/data"
        dest: "deploy/grafana"


    - name: docker compose up containers
      command:
        cmd: docker compose up -d
        chdir: "deploy"


    - name: verifica docker ps
      shell: docker ps
      register: docker_ps
      changed_when: false


    - name: verifica containers do docker ps
      assert:
        that:
          - docker_ps.stdout_lines | length > 3
        fail_msg: "containers n√£o foram iniciados"
        success_msg: "containers foram iniciados"